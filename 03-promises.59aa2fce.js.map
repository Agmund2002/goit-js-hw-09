{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,S,WAGA,IAAMC,EAAOC,SAASC,cAAc,SACNC,EAAAH,EAAKI,SAA5BC,EAAuBF,EAAvBG,MAAOC,EAAgBJ,EAAhBK,KAAMC,EAAUN,EAAVO,OAEpBV,EAAKW,iBAAiB,UAItB,SAAqBC,GACnBA,EAAIC,iBAEJ,IAAMC,EAAW,CACfR,MAAOS,OAAOV,EAAMW,OACpBR,KAAMO,OAAOR,EAAKS,OAClBN,OAAQK,OAAON,EAAOO,QAGpBC,EAAQ,EACRC,EAASJ,EAASR,MAElBa,EAAUC,YAAW,SAASC,IAsBpC,IAAuBC,EAAUC,GAAVD,EArBLL,EAqBeM,EArBRL,EAsBhB,IAAIM,SAAQ,SAACC,EAAKC,GACDC,KAAKC,SAAW,GAEpCH,EAAI,CAACH,WAAUC,cAEfG,EAAI,CAACJ,WAAUC,a,KA1BhBM,MAAK,SAAAC,G,IAAGR,EAAQQ,EAARR,SAAUC,EAASO,EAATP,UACjBzB,EAAAiC,OAAOC,QAAQ,qBAAoCC,OAAfX,EAAS,QAAgBW,OAAVV,EAAU,O,IAE9DW,OAAM,SAAAJ,G,IAAGR,EAAQQ,EAARR,SAAUC,EAASO,EAATP,UAClBzB,EAAAiC,OAAOI,QAAQ,oBAAmCF,OAAfX,EAAS,QAAgBW,OAAVV,EAAU,O,IAG9DN,IACAC,EAASJ,EAASN,KAElBW,EAAUC,WAAWC,EAAKH,GAEtBD,EAAQH,EAASJ,QACnB0B,aAAajB,E,GAEdD,GAEHN,EAAIyB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport \"notiflix/dist/notiflix-notify-aio-3.2.6.min.js\"\n\nconst form = document.querySelector('.form');\nconst {delay, step, amount} = form.elements;\n\nform.addEventListener('submit', handlerForm);\n\n// Функції\n\nfunction handlerForm(evt) {\n  evt.preventDefault();\n  \n  const numValue = {\n    delay: Number(delay.value), \n    step: Number(step.value), \n    amount: Number(amount.value)\n  }\n  \n  let count = 1;\n  let delays = numValue.delay\n\n  let timerId = setTimeout(function run() {\n    createPromise(count, delays)\n    .then(({ position, delayFunc }) => {\n      Notify.success(`Fulfilled promise ${position} in ${delayFunc} ms`);\n    })\n    .catch(({ position, delayFunc }) => {\n      Notify.failure(`Rejected promise ${position} in ${delayFunc} ms`)\n    });\n\n    count++;\n    delays = numValue.step;\n\n    timerId = setTimeout(run, delays)\n\n    if (count > numValue.amount) {\n      clearTimeout(timerId);\n    }\n  }, delays)\n\n  evt.currentTarget.reset();\n}\n\nfunction createPromise(position, delayFunc) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      res({position, delayFunc});\n    } else {\n      rej({position, delayFunc});\n    }\n  })\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$_elements","elements","$ce04d3a99e08e73b$var$delay","delay","$ce04d3a99e08e73b$var$step","step","$ce04d3a99e08e73b$var$amount","amount","addEventListener","evt","preventDefault","numValue","Number","value","count","delays","timerId","setTimeout","run","position","delayFunc","Promise","res","rej","Math","random","then","param","Notify","success","concat","catch","failure","clearTimeout","currentTarget","reset"],"version":3,"file":"03-promises.59aa2fce.js.map"}